


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    2 00000000                 THUMB
    3 00000000                 PRESERVE8        {TRUE}
    4 00000000                 EXPORT           PendSV_Handler
    5 00000000         ;  EXPORT SysTick_Handler
    6 00000000                 EXPORT           StartOS
    7 00000000                 EXPORT           SVC_Handler
    8 00000000                 EXTERN           RunPt
    9 00000000                 EXTERN           NextPt
   10 00000000                 EXTERN           RecordDongs
   11 00000000                 EXTERN           OS_Id
   12 00000000         
   13 00000000         
   14 00000000         ;Round-Robin Switching   
   15 00000000         ;SysTick_Handler 
   16 00000000         ; CPSID I
   17 00000000         ; PUSH {R4 - R11}
   18 00000000         ; LDR R0, =RunPt
   19 00000000         ; LDR R1, [R0]
   20 00000000         ; STR SP, [R1]
   21 00000000         ; LDR R1, [R1, #4]
   22 00000000         ; STR R1, [R0]
   23 00000000         ; LDR SP, [R1]
   24 00000000         ; POP {R4 - R11}
   25 00000000         ; CPSIE I
   26 00000000         ; BX LR
   27 00000000         
   28 00000000         SVC_Handler
   29 00000000 4770            BX               LR
   30 00000002         
   31 00000002         ;switch using chosen NextPt
   32 00000002         PendSV_Handler
   33 00000002 B672            CPSID            I
   34 00000004 B500            PUSH             {LR}
   35 00000006 F7FF FFFE       BL               OS_Id
   36 0000000A F7FF FFFE       BL               RecordDongs
   37 0000000E F85D EB04       POP              {LR}
   38 00000012 E92D 0FF0       PUSH             {R4 - R11}
   39 00000016 480E            LDR              R0, =RunPt
   40 00000018 6801            LDR              R1, [R0]
   41 0000001A F8C1 D000       STR              SP, [R1]
   42 0000001E 490D            LDR              R1, =NextPt
   43 00000020 680A            LDR              R2, [R1]
   44 00000022 6002            STR              R2, [R0]
   45 00000024 F8D2 D000       LDR              SP, [R2]
   46 00000028 E8BD 0FF0       POP              {R4 - R11}
   47 0000002C B662            CPSIE            I
   48 0000002E 4770            BX               LR
   49 00000030         
   50 00000030         StartOS
   51 00000030 4807            LDR              R0, =RunPt  ; currently running
                                                             thread
   52 00000032 6802            LDR              R2, [R0]    ; R2 = value of Run
                                                            Pt
   53 00000034 F8D2 D000       LDR              SP, [R2]    ; new thread SP; SP
                                                             = RunPt->stackPoin
                                                            ter;
   54 00000038 E8BD 0FF0       POP              {R4-R11}    ; restore regs r4-1



ARM Macro Assembler    Page 2 


                                                            1
   55 0000003C BC0F            POP              {R0-R3}     ; restore regs r0-3
                                                            
   56 0000003E F85D CB04       POP              {R12}
   57 00000042 F85D EB04       POP              {LR}        ; discard LR from i
                                                            nitial stack
   58 00000046 F85D EB04       POP              {LR}        ; start location
   59 0000004A BC02            POP              {R1}        ; discard PSR
   60 0000004C B662            CPSIE            I           ; Enable interrupts
                                                             at processor level
                                                            
   61 0000004E 4770            BX               LR          ; start first threa
                                                            d
   62 00000050         
   63 00000050                 ALIGN
   64 00000050                 END
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\thread
switch.d -o.\threadswitch.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include 
-IC:\Keil\ARM\Inc\Luminary --predefine="__EVAL SETA 1" --list=.\threadswitch.ls
t ThreadSwitch.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 1 in file ThreadSwitch.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000002

Symbol: PendSV_Handler
   Definitions
      At line 32 in file ThreadSwitch.s
   Uses
      At line 4 in file ThreadSwitch.s
Comment: PendSV_Handler used once
SVC_Handler 00000000

Symbol: SVC_Handler
   Definitions
      At line 28 in file ThreadSwitch.s
   Uses
      At line 7 in file ThreadSwitch.s
Comment: SVC_Handler used once
StartOS 00000030

Symbol: StartOS
   Definitions
      At line 50 in file ThreadSwitch.s
   Uses
      At line 6 in file ThreadSwitch.s
Comment: StartOS used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

NextPt 00000000

Symbol: NextPt
   Definitions
      At line 9 in file ThreadSwitch.s
   Uses
      At line 42 in file ThreadSwitch.s
Comment: NextPt used once
OS_Id 00000000

Symbol: OS_Id
   Definitions
      At line 11 in file ThreadSwitch.s
   Uses
      At line 35 in file ThreadSwitch.s
Comment: OS_Id used once
RecordDongs 00000000

Symbol: RecordDongs
   Definitions
      At line 10 in file ThreadSwitch.s
   Uses
      At line 36 in file ThreadSwitch.s
Comment: RecordDongs used once
RunPt 00000000

Symbol: RunPt
   Definitions
      At line 8 in file ThreadSwitch.s
   Uses
      At line 39 in file ThreadSwitch.s
      At line 51 in file ThreadSwitch.s

4 symbols
341 symbols in table
